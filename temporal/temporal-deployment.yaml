apiVersion: v1
kind: Namespace
metadata:
  name: temporal

---
  apiVersion: v1
  kind: Service
  metadata:
    name: temporal-api-service
    labels:
      app: temporal
  spec:
    ports:
    - port: 6767
      name: api
    selector:
      app: temporal
      
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: temporal
  labels:
    name: temporal
spec:
  serviceName: "temporal"
  replicas: 1
  selector:
    matchLabels: 
      app: temporal
  template:
    metadata:
      labels:
        app: temporal
        role: node

    spec:

      volumes: 
      - name: workdir
      persistentVolumeClaim: 
        claimName: workdir
      containers:
      - name: temporal
        image: "docker.io/rtradetech/temporal:latest"
        command: ["temporal", "-config", "", "-debug"]
        ports: 
          - name: api
            containerPort: 6767
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: clusterapi
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: krab
        image: "docker.io/rtradetech/temporal:latest"     
        args: ["krab"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: queue-email-send
        image: "docker.io/rtradetech/temporal:latest"  
        args: ["queue", "email-send"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: queue-ipfs-cluster
        image: "docker.io/rtradetech/temporal:latest" 
        args: ["queue", "ipfs", "cluster"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: queue-ipfs-ipns-entry
        image: "docker.io/rtradetech/temporal:latest"  
        args: ["queue", "ipfs", "ipns-entry"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"



      - name: queue-ipfs-key-creation
        image: "docker.io/rtradetech/temporal:latest"  
        args: ["queue", "ipfs", "key-creation"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: queue-ipfs-pin
        image: "docker.io/rtradetech/temporal:latest"  
        args: ["queue", "ipfs", "pin"]
        ports: 
          - name: ipfs
            protocol: TCP
            containerPort: 5001
          - name: "api"
            protocol: "TCP"
            containerPort: 9094 
          - name: db
            containerPort: 5433
          - name: rabbitmq 
            containerPort: 5672
        volumeMounts:
          - name: workdir
            mountPath: "/temporal"


      - name: go-ipfs
        image: "ipfs/go-ipfs"
        ports:
            - name: swarm
              protocol: TCP
              containerPort: 4001
            - name: swarm-udp
              protocol: UDP
              containerPort: 4002
            - name: api
              protocol: TCP
              containerPort: 5001
            - name: ws
              protocol: TCP
              containerPort: 8081
            - name: http
              protocol: TCP
              containerPort: 8080


      - name: ipfs-cluster
        image: "docker.io/ipfs/ipfs-cluster:latest"
        env: 
        - name: CLUSTER_SECRET
          value: "9d171041f5ffd244316307e2141a6890dbf5fb4c00dfb38fd61721b88a4adf87"
        ports:
        - containerPort: 4001
          name: "swarm"
          protocol: "TCP"
        - containerPort: 5001
          name: "api"
          protocol: "TCP"
        - containerPort: 9094
          name: "clusterapi"
          protocol: "TCP"
        - containerPort: 9095
          name: "clusterproxy"
          protocol: "TCP"
        - containerPort: 9096
          name: "cluster"
          protocol: "TCP"
  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: workdir
spec:
  accessModes: 
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi # make this bigger in production