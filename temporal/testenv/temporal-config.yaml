apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-config
  namespace: default
data:

  CONFIG_DAG: ""



  # Api config
  API_CONNECTION_CERTIFICATES_CERTPATH: ""
  API_CONNECTION_CERTIFICATES_KEYPATH: ""
  API_CONNECTION_LISTEN_ADDRESS: "127.0.0.1"
  API_PROMETHEUS_IP: "127.0.0.1"
  API_PROMETHEUS_PORT: "6768"
  API_JWT_REALM: "temporal-realm"
  API_JWT_KEY: "suchStrongKeyMuchProtectVerySafe"
  API_SIZE_LIMIT_IN_GIGA_BYTES: "2"
  API_ADMIN_USER: ""


  
  # database config
  DATABASE_NAME: "temporal"
  DATABASE_URL:  "postgres.default"
  DATABASE_PORT: "5432"
  DATABASE_USERNAME: "postgres"
  DATABASE_PASSWORD: "password123"


  # IPFS config
  IPFS_API_CONNECTION_HOST: "127.0.0.1"
  IPFS_API_CONNECTION_PORT: "5001"
  IPFS_KEYSTORE_PATH: "/tmp"

  # IPFS Cluster config
  IPFS_CLUSTER_API_CONNECTION_HOST: "127.0.0.1"
  IPFS_CLUSTER_API_CONNECTION_PORT: "9094"
    
  #rabbitmq config
  RABBITMQ_URL: "amqp://127.0.0.1:5672/" 

  # KRAB CONFIG
  KRAB_URL: "127.0.0.1:10000"
  KRAB_TLS_CERT_PATH: ""
  KRAB_TLS_KEY_FILE: ""
  KRAB_AUTH_KEY: "password123"
  KRAB_LOG_FILE: "./templogs.log"
  KRAB_KEYSTORE_PASSWORD: "password123"



  # AWS CONFIG
  AWS_KEY_ID: ""
  AWS_SECRET: ""


  SERVICES_RTNS_MULTI_ADDRESS: "/ip4/0.0.0.0/tcp/3999"
  SERVICES_RTNS_KEY_NAME: ""
  SERVICES_RTNS_DATASTORE_PATH: "test"

  SERVICES_LENS_URL: "127.0.0.1:9998"
  SERVICES_LENS_TLS_CERT_PATH: ""
  SERVICES_LENS_TLS_KEY_FILE: ""
  SERVICES_LENS_AUTH_KEY: "blahblahblah"
  SERVICES_LENS_OPTIONS_ENGINE_STORE_PATH: "./tmp"
  #SERVICES_LENS_OPTIONS_ENGINE_QUEUE_RATE: 3
  #SERVICES_LENS_OPTIONS_ENGINE_QUEUE_BATCH: 1



