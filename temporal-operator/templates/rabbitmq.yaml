apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: {{ .Namespace }}
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s].
  rabbitmq.conf: |
      ## Cluster formation. See http://www.rabbitmq.com/cluster-formation.html to learn more.
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      ## Should RabbitMQ node name be computed from the pod's hostname or IP address?
      ## IP addresses are not stable, so using [stable] hostnames is recommended when possible.
      ## Set to "hostname" to use pod hostnames.
      ## When this value is changed, so should the variable used to set the RABBITMQ_NODENAME
      ## environment variable.
      cluster_formation.k8s.address_type = hostname
      ## How often should node cleanup checks run?
      cluster_formation.node_cleanup.interval = 30
      ## Set to false if automatic removal of unknown/absent nodes
      ## is desired. This can be dangerous, see
      ##  * http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup
      ##  * https://groups.google.com/forum/#!msg/rabbitmq-users/wuOfzEywHXo/k8z_HWIkBgAJ
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      ## See http://www.rabbitmq.com/ha.html#master-migration-data-locality
      queue_master_locator=min-masters
      ## enable guest user  
      loopback_users.guest = false
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: rabbitmq-peer-discovery-rbac
  namespace: {{ .Namespace }}
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: rabbitmq-peer-discovery-rbac
  namespace: {{ .Namespace }}
subjects:
- kind: ServiceAccount
  name: {{ .Name }}-{{ .OperatorName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rabbitmq-peer-discovery-rbac

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Name }}-svc
  namespace: {{ .Namespace }}
spec:
  type: ClusterIP
  ports:
  - port: {{ .Params.AMQP_PORT }}
    name: amqp
  - port: {{ .Params.MANAGEMENT_PORT }}
    name: management
  selector:
    app: rabbitmq
    kudo.dev/instance: {{ .Name }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Name }}-{{ .OperatorName }}
  namespace: {{ .Namespace }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Name }}-{{ .OperatorName }}
  namespace: {{ .Namespace }}
  labels:
    rabbitmq: {{ .OperatorName }}
    app: rabbitmq
  annotations:
    reloader.kudo.dev/auto: "true"
spec:
  selector:
    matchLabels:
      app: rabbitmq
      rabbitmq: {{ .OperatorName }}
  serviceName: {{ .Name }}-svc
  replicas: {{ .Params.NODE_COUNT }}
  template:
    metadata:
      labels:
        app: rabbitmq
        rabbitmq: {{ .OperatorName }}
    spec:
      serviceAccountName: {{ .Name }}-{{ .OperatorName }}
      terminationGracePeriodSeconds: 300
      containers:
        - name: rabbitmq-node
          image: rabbitmq:3.8
          resources:
            requests:
              memory: {{ .Params.MEMORY }}
              cpu: {{ .Params.CPUS }}
            limits:
              memory: {{ .Params.MEM_LIMIT }}
              cpu: {{ .Params.CPUS_LIMIT }}
          ports:
            - containerPort: {{ .Params.AMQP_PORT }}
              name: amqp
            - containerPort: {{ .Params.MANAGEMENT_PORT }}
              name: management
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            # See a note on cluster_formation.k8s.address_type in the config file section
            - name: K8S_SERVICE_NAME
              value: {{ .Name }}-svc
            - name: RABBITMQ_NODENAME
              value: rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
            - name: RABBITMQ_ERLANG_COOKIE
              value: "mycookie"
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
            - name: config-volume
              mountPath: /etc/rabbitmq
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Params.DISK_SIZE }}

